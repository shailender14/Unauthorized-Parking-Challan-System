import sqlite3
conn = sqlite3.connect('Vehicle.db')
cursor = conn.cursor()
import cv2
import imutils
import numpy as np
import pytesseract
from PIL import Image
import time
k = "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

cap = cv2.VideoCapture(0)
ret, frame = cap.read()
img = frame[220:700, 150:550]
cv2.imshow('Referanc1.jpg',img)

time.sleep(2)
#img = cv2.imread('1.jpg',cv2.IMREAD_COLOR)

img = cv2.resize(img, (620,480) )
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) #convert to grey scale
gray = cv2.bilateralFilter(gray, 11, 17, 17) #Blur to reduce noise
edged = cv2.Canny(gray, 30, 200) #Perform Edge detection
cnts = cv2.findContours(edged.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
cnts = imutils.grab_contours(cnts)
cnts = sorted(cnts, key = cv2.contourArea, reverse = True)[:10]
screenCnt = None

# loop over our contours
for c in cnts:
	peri = cv2.arcLength(c, True)
	approx = cv2.approxPolyDP(c, 0.018 * peri, True)
	if len(approx) == 4:# if our approximated contour has four points, then
		screenCnt = approx
		break

if screenCnt is None:
	detected = 0
	print ("No contour detected")
else:
	detected = 1

if detected == 1:
	cv2.drawContours(img, [screenCnt], -1, (0, 255, 0), 3)
# Masking the part other than the number plate
mask = np.zeros(gray.shape,np.uint8)
new_image = cv2.drawContours(mask,[screenCnt],0,255,-1,)
new_image = cv2.bitwise_and(img,img,mask=mask)
# Now crop
(x, y) = np.where(mask == 255)
(topx, topy) = (np.min(x), np.min(y))
(bottomx, bottomy) = (np.max(x), np.max(y))
Cropped = gray[topx:bottomx+1, topy:bottomy+1]
#Read the number plate
text = pytesseract.image_to_string(Cropped, config='--psm 6')
print ("initial string : ", text)
getVals = list(filter(lambda x: x in k,  text))
result = "".join(getVals)
# printing final string
print ("final string", result)
time.sleep(1)
i = input("id Number:")
u_name = input("Input the user name:")
u_m_id = input("Give the mail ID:")
cursor.execute('''INSERT INTO vehicle_info(id,name,vehicle_no,mail)VALUES(?,?,?,?)''',
               (i,u_name,text,u_m_id))


print("operation done")
conn.commit()
conn.close()
